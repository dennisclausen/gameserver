---
- name: Install Pterodactyl Panel on Ubuntu 22.04
  hosts: pterodactyl
  become: true

  vars_files:
    - gameserver_vault.yml

  pre_tasks:
    - name: Install PyMySQL system package
      apt:
        name:
          - python3-pymysql
        state: present

  tasks:
    - name: Update and upgrade apt packages
      apt:
        update_cache: yes
        upgrade: dist

    - name: Install dependencies
      apt:
        name:
          - software-properties-common
          - curl
          - wget
          - git
          - unzip
          - tar
          - nginx
          - mysql-server
          - redis-server
          - composer
        state: present

    - name: Check if PHP PPA exists
      stat:
        path: /etc/apt/sources.list.d/ondrej-php.list
      register: php_ppa

    - name: Add PHP PPA
      apt_repository:
        repo: ppa:ondrej/php
        filename: ondrej-php
        state: present
        validate_certs: yes
        codename: noble
      when: not php_ppa.stat.exists

    - name: Install PHP 8.1 and extensions
      apt:
        name:
          - php8.1
          - php8.1-cli
          - php8.1-gd
          - php8.1-mysql
          - php8.1-mbstring
          - php8.1-xml
          - php8.1-curl
          - php8.1-zip
          - php8.1-fpm
          - php8.1-bcmath
          - php8.1-gmp
        state: present

    - name: Create MySQL database
      mysql_db:
        name: panel
        state: present

    - name: Create MySQL user
      become: true
      become_user: mysql
      mysql_user:
        name: pterodactyl
        password: "{{ panel_db_password }}"
        priv: 'panel.*:ALL'
        host: '127.0.0.1'
        state: present
        login_user: sovi 
        login_unix_socket: /var/run/mysqld/mysqld.sock

    - name: Download Pterodactyl Panel
      get_url:
        url: https://github.com/pterodactyl/panel/releases/latest/download/panel.tar.gz
        dest: /var/www/panel.tar.gz

    - name: Extract Panel
      unarchive:
        src: /var/www/panel.tar.gz
        dest: /var/www/pterodactyl
        remote_src: yes

    - name: Set correct permissions
      file:
        path: /var/www/pterodactyl
        recurse: yes
        owner: www-data
        group: www-data

    - name: Copy .env example
      copy:
        src: /var/www/pterodactyl/.env.example
        dest: /var/www/pterodactyl/.env
        remote_src: yes

    - name: Install Composer dependencies
      command: composer install --no-dev --optimize-autoloader
      args:
        chdir: /var/www/pterodactyl

    - name: Generate Application Key
      command: php artisan key:generate --force
      args:
        chdir: /var/www/pterodactyl

    - name: Run Environment Setup
      command: php artisan p:environment:setup --author="admin@{{ domain_name }}" --url="https://{{ domain_name }}" --timezone="Europe/Berlin" --cache=redis
      args:
        chdir: /var/www/pterodactyl

    - name: Setup Database Connection
      command: php artisan p:environment:database --host=127.0.0.1 --port=3306 --database=panel --username=pterodactyl --password={{ panel_db_password }}
      args:
        chdir: /var/www/pterodactyl

    - name: Run Migrations
      command: php artisan migrate --seed --force
      args:
        chdir: /var/www/pterodactyl

    - name: NGINX Config for Pterodactyl
      copy:
        dest: /etc/nginx/sites-available/pterodactyl
        content: |
          server {
              listen 80;
              server_name {{ domain_name }};

              root /var/www/pterodactyl/public;
              index index.php;

              location / {
                  try_files $uri $uri/ /index.php?$query_string;
              }

              location ~ \.php$ {
                  include snippets/fastcgi-php.conf;
                  fastcgi_pass unix:/run/php/php8.1-fpm.sock;
                  fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
                  include fastcgi_params;
              }
          }

    - name: Enable NGINX site
      file:
        src: /etc/nginx/sites-available/pterodactyl
        dest: /etc/nginx/sites-enabled/pterodactyl
        state: link

    - name: Restart Services
      service:
        name: "{{ item }}"
        state: restarted
      loop:
        - nginx
        - php8.1-fpm

    - name: Display Completion Message
      debug:
        msg: "Pterodactyl Panel setup complete! Access via http://{{ domain_name }}"

- name: Install Pterodactyl Wings Daemon
  hosts: wings
  become: true

  tasks:
    - name: Install Docker
      shell: curl -sSL https://get.docker.com/ | bash

    - name: Enable and start Docker
      service:
        name: docker
        state: started
        enabled: yes

    - name: Download Wings Binary
      get_url:
        url: https://github.com/pterodactyl/wings/releases/latest/download/wings_linux_amd64
        dest: /usr/local/bin/wings
        mode: '0755'

    - name: Create Config Directory
      file:
        path: /etc/pterodactyl
        state: directory

    - name: Reminder to configure Wings in Panel
      debug:
        msg: "Wings installed. Configure Node & Allocations in Pterodactyl Panel."

