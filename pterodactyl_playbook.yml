---
- name: Install Pterodactyl Panel on Ubuntu 22.04
  hosts: pterodactyl
  become: true

  vars_files:
    - gameserver_vault.yml

  pre_tasks:
    - name: Install PyMySQL system package
      apt:
        name:
          - python3-pymysql
        state: present

  tasks:
    - name: Update and upgrade apt packages
      apt:
        update_cache: yes
        upgrade: dist

    - name: Install dependencies
      apt:
        name:
          - software-properties-common
          - curl
          - wget
          - git
          - unzip
          - tar
          - nginx
          - mysql-server
          - redis-server
          - composer
        state: present

    - name: Check if PHP PPA exists
      stat:
        path: /etc/apt/sources.list.d/ondrej-php.list
      register: php_ppa

    - name: Add PHP PPA
      apt_repository:
        repo: ppa:ondrej/php
        filename: ondrej-php
        state: present
        validate_certs: yes
        codename: noble
      when: not php_ppa.stat.exists

    - name: Install PHP 8.2 and extensions
      apt:
        name:
          - php8.2
          - php8.2-cli
          - php8.2-gd
          - php8.2-mysql
          - php8.2-mbstring
          - php8.2-xml
          - php8.2-curl
          - php8.2-zip
          - php8.2-fpm
          - php8.2-bcmath
          - php8.2-gmp
          - php8.2-intl
        state: present

    - name: Ensure Ansible user exists
      user:
        name: "{{ ansible_user }}"
        groups: sudo
        append: yes
        shell: /bin/bash

    - name: Allow Ansible user passwordless sudo
      lineinfile:
        path: /etc/sudoers.d/{{ ansible_user }}
        create: yes
        line: "{{ ansible_user }} ALL=(ALL) NOPASSWD:ALL"

    - name: Ensure MySQL admin user exists
      shell: |
        mysql -u root -e "CREATE USER IF NOT EXISTS '{{ mysql_admin_user }}'@'localhost' IDENTIFIED BY '{{ mysql_admin_password }}';
        GRANT ALL PRIVILEGES ON *.* TO '{{ mysql_admin_user }}'@'localhost' WITH GRANT OPTION;
        FLUSH PRIVILEGES;"
      args:
        executable: /bin/bash
  
    - name: Ensure MySQL database exists
      shell: |
        mysql -u {{ mysql_admin_user }} -p{{ mysql_admin_password }} -e "CREATE DATABASE IF NOT EXISTS panel CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci;"
      args:
        executable: /bin/bash

    - name: Ensure MySQL pterodactyl user exists
      shell: |
        mysql -u {{ mysql_admin_user }} -p{{ mysql_admin_password }} -e "CREATE USER IF NOT EXISTS 'pterodactyl'@'127.0.0.1' IDENTIFIED BY '{{ panel_db_password }}';
        GRANT ALL PRIVILEGES ON panel.* TO 'pterodactyl'@'127.0.0.1';
        FLUSH PRIVILEGES;"
      args:
        executable: /bin/bash

    - name: Ensure /var/www/pterodactyl directory exists
      file:
        path: /var/www/pterodactyl
        state: directory

    - name: Download Pterodactyl Panel
      get_url:
        url: https://github.com/pterodactyl/panel/releases/latest/download/panel.tar.gz
        dest: /var/www/panel.tar.gz

    - name: Extract Panel
      unarchive:
        src: /var/www/panel.tar.gz
        dest: /var/www/pterodactyl
        remote_src: yes

    - name: Set correct permissions
      file:
        path: /var/www/pterodactyl
        recurse: yes
        owner: www-data
        group: www-data

    - name: Copy .env example
      copy:
        src: /var/www/pterodactyl/.env.example
        dest: /var/www/pterodactyl/.env
        remote_src: yes

    - name: Install Composer dependencies
      shell: COMPOSER_ALLOW_SUPERUSER=1 composer install --no-dev --optimize-autoloader --ignore-platform-reqs
      args:
        chdir: /var/www/pterodactyl

    - name: Generate Application Key
      command: php artisan key:generate --force
      args:
        chdir: /var/www/pterodactyl

    - name: Run Environment Setup
      command: php artisan p:environment:setup --author="{{ panel_admin_email }}" --url="https://{{ domain_name }}" --timezone="Europe/Berlin" --cache=redis
      args:
        chdir: /var/www/pterodactyl

    - name: Setup Database Connection
      command: php artisan p:environment:database --host=127.0.0.1 --port=3306 --database=panel --username=pterodactyl --password={{ panel_db_password }}
      args:
        chdir: /var/www/pterodactyl

    - name: Run Migrations
      command: php artisan migrate --seed --force
      args:
        chdir: /var/www/pterodactyl

    - name: Check if Admin User exists in DB
      shell: |
        mysql -u {{ mysql_admin_user }} -p{{ mysql_admin_password }} -D panel -se "SELECT id FROM users WHERE email='{{ panel_admin_email }}';"
      args:
        executable: /bin/bash
      register: user_exists
      failed_when: false

    - name: Create Admin User
      command: php artisan p:user:make --email="{{ panel_admin_email }}" --username="{{ panel_admin_username }}" --name-first="{{ panel_admin_name_first }}" --name-last="{{ panel_admin_name_last }}" --password="{{ panel_admin_password }}" --admin=1
      args:
        chdir: /var/www/pterodactyl
      when: user_exists.rc != 0

    - name: NGINX Config for Pterodactyl
      copy:
        dest: /etc/nginx/sites-available/pterodactyl
        content: |
          server {
              listen 80;
              server_name {{ domain_name }};

              root /var/www/pterodactyl/public;
              index index.php;

              location / {
                  try_files $uri $uri/ /index.php?$query_string;
              }

              location ~ \.php$ {
                  include snippets/fastcgi-php.conf;
                  fastcgi_pass unix:/run/php/php8.1-fpm.sock;
                  fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
                  include fastcgi_params;
              }
          }

    - name: Enable NGINX site
      file:
        src: /etc/nginx/sites-available/pterodactyl
        dest: /etc/nginx/sites-enabled/pterodactyl
        state: link

    - name: Remove NGINX default site
      file:
        path: /etc/nginx/sites-enabled/default
        state: absent

    - name: Restart Services
      service:
        name: "{{ item }}"
        state: restarted
      loop:
        - nginx
        - php8.1-fpm

    - name: Display Completion Message
      debug:
        msg: "Pterodactyl Panel setup complete! Access via http://{{ domain_name }}"

- name: Install Pterodactyl Wings Daemon
  hosts: wings
  become: true

  tasks:
    - name: Install Docker
      shell: curl -sSL https://get.docker.com/ | bash

    - name: Enable and start Docker
      service:
        name: docker
        state: started
        enabled: yes

    - name: Download Wings Binary
      get_url:
        url: https://github.com/pterodactyl/wings/releases/latest/download/wings_linux_amd64
        dest: /usr/local/bin/wings
        mode: '0755'

    - name: Create Config Directory
      file:
        path: /etc/pterodactyl
        state: directory

    - name: Reminder to configure Wings in Panel
      debug:
        msg: "Wings installed. Configure Node & Allocations in Pterodactyl Panel."

